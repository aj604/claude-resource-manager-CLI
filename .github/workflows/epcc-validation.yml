name: EPCC Workflow Validation

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  validate-epcc:
    name: Validate EPCC Workflow Compliance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for EPCC documentation
        id: check-docs
        run: |
          echo "🔍 Checking for EPCC documentation..."

          # Check for any EPCC output files
          EPCC_FILES=$(find . -maxdepth 2 -name "EPCC_*.md" -o -name "*epcc*.md" 2>/dev/null || true)

          if [ -z "$EPCC_FILES" ]; then
            echo "⚠️  Warning: No EPCC documentation files found"
            echo "   Consider documenting your changes with EPCC workflow:"
            echo "   - /epcc-explore for exploration"
            echo "   - /epcc-plan for planning"
            echo "   - /epcc-code for implementation"
            echo "has_epcc_docs=false" >> $GITHUB_OUTPUT
          else
            echo "✅ EPCC documentation found:"
            echo "$EPCC_FILES"
            echo "has_epcc_docs=true" >> $GITHUB_OUTPUT
          fi

      - name: Validate commit messages
        run: |
          echo "🔍 Validating commit messages..."

          # Get commits in this PR
          git log --format=%B origin/${{ github.base_ref }}..HEAD | while read -r line; do
            if [ -n "$line" ]; then
              if echo "$line" | grep -qE '^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+'; then
                echo "✅ Valid: $line"
              else
                echo "⚠️  Warning: Non-conventional commit message: $line"
              fi
            fi
          done

      - name: Check test existence
        run: |
          echo "🔍 Checking for tests..."

          if [ -d "tests/" ]; then
            TEST_COUNT=$(find tests/ -name "test_*.py" | wc -l)
            echo "✅ Found $TEST_COUNT test files"
          else
            echo "⚠️  Warning: No tests directory found"
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run tests
        run: |
          pytest tests/unit/ -v --tb=short

      - name: Check code quality
        run: |
          ruff check src/ tests/ || true
          mypy src/ || true

      - name: Security scan
        run: |
          bandit -r src/claude_resource_manager/ -ll || true

      - name: EPCC Summary
        if: always()
        run: |
          echo "## EPCC Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check-docs.outputs.has_epcc_docs }}" = "true" ]; then
            echo "✅ EPCC documentation found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️  No EPCC documentation found" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Recommended EPCC Commands:" >> $GITHUB_STEP_SUMMARY
          echo "- \`/epcc-explore <area>\` - Explore codebase" >> $GITHUB_STEP_SUMMARY
          echo "- \`/epcc-plan <feature>\` - Create implementation plan" >> $GITHUB_STEP_SUMMARY
          echo "- \`/epcc-code\` - Implement with TDD" >> $GITHUB_STEP_SUMMARY
          echo "- \`/epcc-commit <message>\` - Finalize changes" >> $GITHUB_STEP_SUMMARY
